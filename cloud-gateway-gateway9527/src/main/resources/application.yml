
server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/**         # 断言，路径相匹配的进行路由

        - id: payment_routh2 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001          #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/**         # 断言，路径相匹配的进行路由
#            - After=2020-12-23T22:51:37.485+08:00[Asia/Shanghai]
#            - Before=2020-12-23T23:51:37.485+08:00[Asia/Shanghai]
#            - Between=2020-12-23T22:51:37.485+08:00[Asia/Shanghai], 2020-12-23T23:01:37.485+08:00[Asia/Shanghai]
#            - Cookie=username,zzyy
#            - Header=X-Request-Id, \d+  # 请求头要有X-Request-Id属性并且值为整数的正则表达式
#            - Host=**.somehost.org,**.anotherhost.org
#            - Method=GET,POST
#            - Query=green
#            - RemoteAddr=192.168.1.1/24
#            - Weight=group1, 8
#            - Weight=group1, 2
#        - id: payment_routh3 #payment_route    #路由的ID，没有固定规则但要求唯一，建议配合服务名
#          uri: https://news.baidu.com      #匹配后提供服务的路由地址
##          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
#          predicates:
#            - Path=/guonei/**         # 断言，路径相匹配的进行路由
#        #访问地址http://localhost:9527/guonei 会跳转->https://news.baidu.com/guonei
#        #他的意思是是 我访问网关9527的guonei路径 然后一看 网关里断言有国内匹配，然后找到uri是https://news.baidu.com
#        #最后跳转https://news.baidu.com/guonei

eureka:
  instance:
    hostname: cloud-gateway-service
    instance-id: gateway9527
    #访问路径可以显示IP地址
    prefer-ip-address: true
  client: #服务提供者provider注册进eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka



